/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_RSCP_RSCP_PB_H_INCLUDED
#define PB_RSCP_RSCP_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* *
 Rover state. */
typedef enum _rscp_RoverState {
    rscp_RoverState_DISARMED = 0,
    rscp_RoverState_AUTONOMOUS = 1,
    rscp_RoverState_MANUAL = 2
} rscp_RoverState;

/* Struct definitions */
/* *
 Acknowledge message. */
typedef struct _rscp_Acknowledge {
    char dummy_field;
} rscp_Acknowledge;

/* *
 Coordinate message.
 (EGM96 model is used.)

 https://cddis.nasa.gov/926/egm96/gendesc.html#:~:text=EGM96%20is%20a%20geopotential%20model,quadrature%20solution%20at%20degree%20360. */
typedef struct _rscp_GPSCoordinate {
    double latitude; /* In degrees. */
    double longitude; /* In degrees. */
    float altitude; /* In meters. */
} rscp_GPSCoordinate;

/* *
 Battery state message. */
typedef struct _rscp_BatteryState {
    float voltage; /* Battery voltage in volts. */
    float current; /* Battery current in amperes. */
    float state_of_charge; /* Value between 0.0 and 1.0. */
} rscp_BatteryState;

/* *
 Arm or disarm the rover. */
typedef struct _rscp_ArmDisarm {
    bool value; /* True to arm, false to disarm. */
} rscp_ArmDisarm;

/* *
 Navigate to GPS coordinates. */
typedef struct _rscp_NavigateToGPS {
    bool has_coordinate;
    rscp_GPSCoordinate coordinate; /* The coordinate to navigate to. */
} rscp_NavigateToGPS;

/* *
 Search area message. */
typedef struct _rscp_SearchArea {
    bool has_center_coordinate;
    rscp_GPSCoordinate center_coordinate; /* The center of the search area. */
    float radius; /* The radius (in meters). */
} rscp_SearchArea;

/* *
 Set the mission stage. */
typedef struct _rscp_SetStage {
    uint32_t value; /* The stage to set. */
} rscp_SetStage;

/* *
 Start exploration. */
typedef struct _rscp_StartExploration {
    char dummy_field;
} rscp_StartExploration;

/* *
 Envelope for all request messages. */
typedef struct _rscp_RequestEnvelope {
    pb_size_t which_request;
    union _rscp_RequestEnvelope_request {
        rscp_ArmDisarm arm_disarm; /* Arm or disarm the rover. */
        rscp_SetStage set_stage; /* Set the mission stage. */
        rscp_NavigateToGPS navigate_to_gps; /* Navigate to GPS coordinates. */
        rscp_SearchArea search_area; /* Search an area. */
        rscp_StartExploration start_exploration; /* Start exploration. */
    } request;
} rscp_RequestEnvelope;

/* *
 Task finished message. */
typedef struct _rscp_TaskFinished {
    char dummy_field;
} rscp_TaskFinished;

/* *
 Rover status update.
 At max 1Hz. */
typedef struct _rscp_RoverStatus {
    rscp_RoverState state; /* The rover's current state. */
    bool has_coordinate;
    rscp_GPSCoordinate coordinate; /* The rover's current GPS coordinate. */
    float heading; /* The rover's compass heading. */
    bool has_battery_state;
    rscp_BatteryState battery_state; /* The rover's battery state. */
} rscp_RoverStatus;

/* *
 Envelope for all response messages. */
typedef struct _rscp_ResponseEnvelope {
    pb_size_t which_response;
    union _rscp_ResponseEnvelope_response {
        rscp_Acknowledge acknowledge; /* Acknowledge a received command. */
        rscp_TaskFinished task_finished; /* Indicate that a task has finished. */
        rscp_GPSCoordinate gps_coordinate; /* Report a GPS coordinate. */
        double distance; /* Report a measured distance. */
        pb_callback_t message; /* A message from the rover. */
        rscp_RoverStatus rover_status; /* Provide a full rover status update. */
    } response;
} rscp_ResponseEnvelope;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _rscp_RoverState_MIN rscp_RoverState_DISARMED
#define _rscp_RoverState_MAX rscp_RoverState_MANUAL
#define _rscp_RoverState_ARRAYSIZE ((rscp_RoverState)(rscp_RoverState_MANUAL+1))











#define rscp_RoverStatus_state_ENUMTYPE rscp_RoverState



/* Initializer values for message structs */
#define rscp_Acknowledge_init_default            {0}
#define rscp_GPSCoordinate_init_default          {0, 0, 0}
#define rscp_BatteryState_init_default           {0, 0, 0}
#define rscp_ArmDisarm_init_default              {0}
#define rscp_NavigateToGPS_init_default          {false, rscp_GPSCoordinate_init_default}
#define rscp_SearchArea_init_default             {false, rscp_GPSCoordinate_init_default, 0}
#define rscp_SetStage_init_default               {0}
#define rscp_StartExploration_init_default       {0}
#define rscp_RequestEnvelope_init_default        {0, {rscp_ArmDisarm_init_default}}
#define rscp_TaskFinished_init_default           {0}
#define rscp_RoverStatus_init_default            {_rscp_RoverState_MIN, false, rscp_GPSCoordinate_init_default, 0, false, rscp_BatteryState_init_default}
#define rscp_ResponseEnvelope_init_default       {0, {rscp_Acknowledge_init_default}}
#define rscp_Acknowledge_init_zero               {0}
#define rscp_GPSCoordinate_init_zero             {0, 0, 0}
#define rscp_BatteryState_init_zero              {0, 0, 0}
#define rscp_ArmDisarm_init_zero                 {0}
#define rscp_NavigateToGPS_init_zero             {false, rscp_GPSCoordinate_init_zero}
#define rscp_SearchArea_init_zero                {false, rscp_GPSCoordinate_init_zero, 0}
#define rscp_SetStage_init_zero                  {0}
#define rscp_StartExploration_init_zero          {0}
#define rscp_RequestEnvelope_init_zero           {0, {rscp_ArmDisarm_init_zero}}
#define rscp_TaskFinished_init_zero              {0}
#define rscp_RoverStatus_init_zero               {_rscp_RoverState_MIN, false, rscp_GPSCoordinate_init_zero, 0, false, rscp_BatteryState_init_zero}
#define rscp_ResponseEnvelope_init_zero          {0, {rscp_Acknowledge_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define rscp_GPSCoordinate_latitude_tag          1
#define rscp_GPSCoordinate_longitude_tag         2
#define rscp_GPSCoordinate_altitude_tag          3
#define rscp_BatteryState_voltage_tag            1
#define rscp_BatteryState_current_tag            2
#define rscp_BatteryState_state_of_charge_tag    3
#define rscp_ArmDisarm_value_tag                 1
#define rscp_NavigateToGPS_coordinate_tag        1
#define rscp_SearchArea_center_coordinate_tag    1
#define rscp_SearchArea_radius_tag               2
#define rscp_SetStage_value_tag                  1
#define rscp_RequestEnvelope_arm_disarm_tag      1
#define rscp_RequestEnvelope_set_stage_tag       2
#define rscp_RequestEnvelope_navigate_to_gps_tag 3
#define rscp_RequestEnvelope_search_area_tag     4
#define rscp_RequestEnvelope_start_exploration_tag 5
#define rscp_RoverStatus_state_tag               1
#define rscp_RoverStatus_coordinate_tag          2
#define rscp_RoverStatus_heading_tag             3
#define rscp_RoverStatus_battery_state_tag       4
#define rscp_ResponseEnvelope_acknowledge_tag    1
#define rscp_ResponseEnvelope_task_finished_tag  2
#define rscp_ResponseEnvelope_gps_coordinate_tag 3
#define rscp_ResponseEnvelope_distance_tag       4
#define rscp_ResponseEnvelope_message_tag        5
#define rscp_ResponseEnvelope_rover_status_tag   6

/* Struct field encoding specification for nanopb */
#define rscp_Acknowledge_FIELDLIST(X, a) \

#define rscp_Acknowledge_CALLBACK NULL
#define rscp_Acknowledge_DEFAULT NULL

#define rscp_GPSCoordinate_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, DOUBLE,   latitude,          1) \
X(a, STATIC,   SINGULAR, DOUBLE,   longitude,         2) \
X(a, STATIC,   SINGULAR, FLOAT,    altitude,          3)
#define rscp_GPSCoordinate_CALLBACK NULL
#define rscp_GPSCoordinate_DEFAULT NULL

#define rscp_BatteryState_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    voltage,           1) \
X(a, STATIC,   SINGULAR, FLOAT,    current,           2) \
X(a, STATIC,   SINGULAR, FLOAT,    state_of_charge,   3)
#define rscp_BatteryState_CALLBACK NULL
#define rscp_BatteryState_DEFAULT NULL

#define rscp_ArmDisarm_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     value,             1)
#define rscp_ArmDisarm_CALLBACK NULL
#define rscp_ArmDisarm_DEFAULT NULL

#define rscp_NavigateToGPS_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  coordinate,        1)
#define rscp_NavigateToGPS_CALLBACK NULL
#define rscp_NavigateToGPS_DEFAULT NULL
#define rscp_NavigateToGPS_coordinate_MSGTYPE rscp_GPSCoordinate

#define rscp_SearchArea_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  center_coordinate,   1) \
X(a, STATIC,   SINGULAR, FLOAT,    radius,            2)
#define rscp_SearchArea_CALLBACK NULL
#define rscp_SearchArea_DEFAULT NULL
#define rscp_SearchArea_center_coordinate_MSGTYPE rscp_GPSCoordinate

#define rscp_SetStage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   value,             1)
#define rscp_SetStage_CALLBACK NULL
#define rscp_SetStage_DEFAULT NULL

#define rscp_StartExploration_FIELDLIST(X, a) \

#define rscp_StartExploration_CALLBACK NULL
#define rscp_StartExploration_DEFAULT NULL

#define rscp_RequestEnvelope_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,arm_disarm,request.arm_disarm),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,set_stage,request.set_stage),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,navigate_to_gps,request.navigate_to_gps),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,search_area,request.search_area),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,start_exploration,request.start_exploration),   5)
#define rscp_RequestEnvelope_CALLBACK NULL
#define rscp_RequestEnvelope_DEFAULT NULL
#define rscp_RequestEnvelope_request_arm_disarm_MSGTYPE rscp_ArmDisarm
#define rscp_RequestEnvelope_request_set_stage_MSGTYPE rscp_SetStage
#define rscp_RequestEnvelope_request_navigate_to_gps_MSGTYPE rscp_NavigateToGPS
#define rscp_RequestEnvelope_request_search_area_MSGTYPE rscp_SearchArea
#define rscp_RequestEnvelope_request_start_exploration_MSGTYPE rscp_StartExploration

#define rscp_TaskFinished_FIELDLIST(X, a) \

#define rscp_TaskFinished_CALLBACK NULL
#define rscp_TaskFinished_DEFAULT NULL

#define rscp_RoverStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    state,             1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  coordinate,        2) \
X(a, STATIC,   SINGULAR, FLOAT,    heading,           3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  battery_state,     4)
#define rscp_RoverStatus_CALLBACK NULL
#define rscp_RoverStatus_DEFAULT NULL
#define rscp_RoverStatus_coordinate_MSGTYPE rscp_GPSCoordinate
#define rscp_RoverStatus_battery_state_MSGTYPE rscp_BatteryState

#define rscp_ResponseEnvelope_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,acknowledge,response.acknowledge),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,task_finished,response.task_finished),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,gps_coordinate,response.gps_coordinate),   3) \
X(a, STATIC,   ONEOF,    DOUBLE,   (response,distance,response.distance),   4) \
X(a, CALLBACK, ONEOF,    STRING,   (response,message,response.message),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,rover_status,response.rover_status),   6)
#define rscp_ResponseEnvelope_CALLBACK pb_default_field_callback
#define rscp_ResponseEnvelope_DEFAULT NULL
#define rscp_ResponseEnvelope_response_acknowledge_MSGTYPE rscp_Acknowledge
#define rscp_ResponseEnvelope_response_task_finished_MSGTYPE rscp_TaskFinished
#define rscp_ResponseEnvelope_response_gps_coordinate_MSGTYPE rscp_GPSCoordinate
#define rscp_ResponseEnvelope_response_rover_status_MSGTYPE rscp_RoverStatus

extern const pb_msgdesc_t rscp_Acknowledge_msg;
extern const pb_msgdesc_t rscp_GPSCoordinate_msg;
extern const pb_msgdesc_t rscp_BatteryState_msg;
extern const pb_msgdesc_t rscp_ArmDisarm_msg;
extern const pb_msgdesc_t rscp_NavigateToGPS_msg;
extern const pb_msgdesc_t rscp_SearchArea_msg;
extern const pb_msgdesc_t rscp_SetStage_msg;
extern const pb_msgdesc_t rscp_StartExploration_msg;
extern const pb_msgdesc_t rscp_RequestEnvelope_msg;
extern const pb_msgdesc_t rscp_TaskFinished_msg;
extern const pb_msgdesc_t rscp_RoverStatus_msg;
extern const pb_msgdesc_t rscp_ResponseEnvelope_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define rscp_Acknowledge_fields &rscp_Acknowledge_msg
#define rscp_GPSCoordinate_fields &rscp_GPSCoordinate_msg
#define rscp_BatteryState_fields &rscp_BatteryState_msg
#define rscp_ArmDisarm_fields &rscp_ArmDisarm_msg
#define rscp_NavigateToGPS_fields &rscp_NavigateToGPS_msg
#define rscp_SearchArea_fields &rscp_SearchArea_msg
#define rscp_SetStage_fields &rscp_SetStage_msg
#define rscp_StartExploration_fields &rscp_StartExploration_msg
#define rscp_RequestEnvelope_fields &rscp_RequestEnvelope_msg
#define rscp_TaskFinished_fields &rscp_TaskFinished_msg
#define rscp_RoverStatus_fields &rscp_RoverStatus_msg
#define rscp_ResponseEnvelope_fields &rscp_ResponseEnvelope_msg

/* Maximum encoded size of messages (where known) */
/* rscp_ResponseEnvelope_size depends on runtime parameters */
#define RSCP_RSCP_PB_H_MAX_SIZE                  rscp_RoverStatus_size
#define rscp_Acknowledge_size                    0
#define rscp_ArmDisarm_size                      2
#define rscp_BatteryState_size                   15
#define rscp_GPSCoordinate_size                  23
#define rscp_NavigateToGPS_size                  25
#define rscp_RequestEnvelope_size                32
#define rscp_RoverStatus_size                    49
#define rscp_SearchArea_size                     30
#define rscp_SetStage_size                       6
#define rscp_StartExploration_size               0
#define rscp_TaskFinished_size                   0

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
